/** @fileoverview
 * This file was generated by GraphQL Codegen.
 * You should not modify this file directly.
 * Please modify the source GraphQL files instead and
 * then run `npm run codegen` to update this file.
 */

import { gql } from '@apollo/client';
import * as Apollo from '@apollo/client';
import { query } from '@/apollo/register-apollo-client';
import * as Types from '@/gql/types';

const defaultOptions = {} as const;
export type AnilistDetailsQuery_Media_Media_title_MediaTitle = {
	__typename?: 'MediaTitle';
	romaji?: string | null;
	english?: string | null;
	native?: string | null;
};

export type AnilistDetailsQuery_Media_Media_coverImage_MediaCoverImage = {
	__typename?: 'MediaCoverImage';
	extraLarge?: string | null;
	large?: string | null;
	medium?: string | null;
};

export type AnilistDetailsQuery_Media_Media_startDate_FuzzyDate = {
	__typename?: 'FuzzyDate';
	year?: number | null;
	month?: number | null;
	day?: number | null;
};

export type AnilistDetailsQuery_Media_Media_endDate_FuzzyDate = {
	__typename?: 'FuzzyDate';
	year?: number | null;
	month?: number | null;
	day?: number | null;
};

export type AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection_edges_CharacterEdge_voiceActors_Staff_name_StaffName =
	{
		__typename?: 'StaffName';
		userPreferred?: string | null;
	};

export type AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection_edges_CharacterEdge_voiceActors_Staff =
	{
		__typename?: 'Staff';
		id: number;
		language?: string | null;
		name?: AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection_edges_CharacterEdge_voiceActors_Staff_name_StaffName | null;
	};

export type AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection_edges_CharacterEdge_node_Character_name_CharacterName =
	{
		__typename?: 'CharacterName';
		userPreferred?: string | null;
	};

export type AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection_edges_CharacterEdge_node_Character_image_CharacterImage =
	{
		__typename?: 'CharacterImage';
		large?: string | null;
		medium?: string | null;
	};

export type AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection_edges_CharacterEdge_node_Character =
	{
		__typename?: 'Character';
		id: number;
		name?: AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection_edges_CharacterEdge_node_Character_name_CharacterName | null;
		image?: AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection_edges_CharacterEdge_node_Character_image_CharacterImage | null;
	};

export type AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection_edges_CharacterEdge =
	{
		__typename?: 'CharacterEdge';
		id?: number | null;
		role?: Types.CharacterRole | null;
		name?: string | null;
		voiceActors?: Array<AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection_edges_CharacterEdge_voiceActors_Staff | null> | null;
		node?: AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection_edges_CharacterEdge_node_Character | null;
	};

export type AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection = {
	__typename?: 'CharacterConnection';
	edges?: Array<AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection_edges_CharacterEdge | null> | null;
};

export type AnilistDetailsQuery_Media_Media_studios_StudioConnection_edges_StudioEdge_node_Studio =
	{
		__typename?: 'Studio';
		id: number;
		name: string;
	};

export type AnilistDetailsQuery_Media_Media_studios_StudioConnection_edges_StudioEdge = {
	__typename?: 'StudioEdge';
	isMain: boolean;
	node?: AnilistDetailsQuery_Media_Media_studios_StudioConnection_edges_StudioEdge_node_Studio | null;
};

export type AnilistDetailsQuery_Media_Media_studios_StudioConnection = {
	__typename?: 'StudioConnection';
	edges?: Array<AnilistDetailsQuery_Media_Media_studios_StudioConnection_edges_StudioEdge | null> | null;
};

export type AnilistDetailsQuery_Media_Media_tags_MediaTag = {
	__typename?: 'MediaTag';
	id: number;
	name: string;
	description?: string | null;
	rank?: number | null;
	isMediaSpoiler?: boolean | null;
	isGeneralSpoiler?: boolean | null;
};

export type AnilistDetailsQuery_Media_Media_mediaListEntry_MediaList = {
	__typename?: 'MediaList';
	id: number;
	status?: Types.MediaListStatus | null;
	score?: number | null;
};

export type AnilistDetailsQuery_Media_Media = {
	__typename?: 'Media';
	id: number;
	bannerImage?: string | null;
	description?: string | null;
	type?: Types.MediaType | null;
	format?: Types.MediaFormat | null;
	status?: Types.MediaStatus | null;
	episodes?: number | null;
	duration?: number | null;
	chapters?: number | null;
	volumes?: number | null;
	genres?: Array<string | null> | null;
	synonyms?: Array<string | null> | null;
	source?: Types.MediaSource | null;
	isAdult?: boolean | null;
	meanScore?: number | null;
	averageScore?: number | null;
	popularity?: number | null;
	favourites?: number | null;
	trending?: number | null;
	hashtag?: string | null;
	countryOfOrigin?: any | null;
	title?: AnilistDetailsQuery_Media_Media_title_MediaTitle | null;
	coverImage?: AnilistDetailsQuery_Media_Media_coverImage_MediaCoverImage | null;
	startDate?: AnilistDetailsQuery_Media_Media_startDate_FuzzyDate | null;
	endDate?: AnilistDetailsQuery_Media_Media_endDate_FuzzyDate | null;
	characterPreview?: AnilistDetailsQuery_Media_Media_characterPreview_CharacterConnection | null;
	studios?: AnilistDetailsQuery_Media_Media_studios_StudioConnection | null;
	tags?: Array<AnilistDetailsQuery_Media_Media_tags_MediaTag | null> | null;
	mediaListEntry?: AnilistDetailsQuery_Media_Media_mediaListEntry_MediaList | null;
};

export type AnilistDetailsQuery_Query = {
	__typename?: 'Query';
	Media?: AnilistDetailsQuery_Media_Media | null;
};

export type AnilistDetailsQueryVariables = Types.Exact<{
	id?: Types.InputMaybe<Types.Scalars['Int']['input']>;
	type?: Types.InputMaybe<Types.MediaType>;
	isAdult?: Types.InputMaybe<Types.Scalars['Boolean']['input']>;
}>;

export type AnilistDetailsQuery = AnilistDetailsQuery_Query;

export const AnilistDetailsDocument = gql`
	query AnilistDetails($id: Int, $type: MediaType, $isAdult: Boolean) {
		Media(id: $id, type: $type, isAdult: $isAdult) {
			id
			title {
				romaji
				english
				native
			}
			coverImage {
				extraLarge
				large
				medium
			}
			bannerImage
			startDate {
				year
				month
				day
			}
			endDate {
				year
				month
				day
			}
			description
			type
			format
			status(version: 2)
			episodes
			duration
			chapters
			volumes
			genres
			synonyms
			source(version: 3)
			isAdult
			meanScore
			averageScore
			popularity
			favourites
			trending
			hashtag
			countryOfOrigin
			characterPreview: characters(perPage: 6, sort: [ROLE, RELEVANCE, ID]) {
				edges {
					id
					role
					name
					voiceActors(language: JAPANESE, sort: [RELEVANCE, ID]) {
						id
						name {
							userPreferred
						}
						language: languageV2
					}
					node {
						id
						name {
							userPreferred
						}
						image {
							large
							medium
						}
					}
				}
			}
			studios(sort: [FAVOURITES_DESC]) {
				edges {
					isMain
					node {
						id
						name
					}
				}
			}
			tags {
				id
				name
				description
				rank
				isMediaSpoiler
				isGeneralSpoiler
			}
			mediaListEntry {
				id
				status
				score
			}
		}
	}
`;

/**
 * __useAnilistDetailsQuery__
 *
 * To run a query within a React component, call `useAnilistDetailsQuery` and pass it any options that fit your needs.
 * When your component renders, `useAnilistDetailsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useAnilistDetailsQuery({
 *   variables: {
 *      id: // value for 'id'
 *      type: // value for 'type'
 *      isAdult: // value for 'isAdult'
 *   },
 * });
 */
export function useAnilistDetailsQuery(
	baseOptions?: Apollo.QueryHookOptions<AnilistDetailsQuery, AnilistDetailsQueryVariables>,
) {
	const options = { ...defaultOptions, ...baseOptions };
	return Apollo.useQuery<AnilistDetailsQuery, AnilistDetailsQueryVariables>(
		AnilistDetailsDocument,
		options,
	);
}
export function useAnilistDetailsLazyQuery(
	baseOptions?: Apollo.LazyQueryHookOptions<AnilistDetailsQuery, AnilistDetailsQueryVariables>,
) {
	const options = { ...defaultOptions, ...baseOptions };
	return Apollo.useLazyQuery<AnilistDetailsQuery, AnilistDetailsQueryVariables>(
		AnilistDetailsDocument,
		options,
	);
}
export function useAnilistDetailsSuspenseQuery(
	baseOptions?:
		| Apollo.SkipToken
		| Apollo.SuspenseQueryHookOptions<AnilistDetailsQuery, AnilistDetailsQueryVariables>,
) {
	const options =
		baseOptions === Apollo.skipToken ? baseOptions : { ...defaultOptions, ...baseOptions };
	return Apollo.useSuspenseQuery<AnilistDetailsQuery, AnilistDetailsQueryVariables>(
		AnilistDetailsDocument,
		options,
	);
}
export type AnilistDetailsQueryHookResult = ReturnType<typeof useAnilistDetailsQuery>;
export type AnilistDetailsLazyQueryHookResult = ReturnType<typeof useAnilistDetailsLazyQuery>;
export type AnilistDetailsSuspenseQueryHookResult = ReturnType<
	typeof useAnilistDetailsSuspenseQuery
>;
export type AnilistDetailsQueryResult = Apollo.QueryResult<
	AnilistDetailsQuery,
	AnilistDetailsQueryVariables
>;
export function refetchAnilistDetailsQuery(variables?: AnilistDetailsQueryVariables) {
	return { query: AnilistDetailsDocument, variables: variables };
}
export const queryAnilistDetails = (
	options: Omit<Apollo.QueryOptions<AnilistDetailsQueryVariables, AnilistDetailsQuery>, 'query'>,
) =>
	query<AnilistDetailsQuery, AnilistDetailsQueryVariables>({
		query: AnilistDetailsDocument,
		...options,
	});
